package com.airlinemanagement.repository;

import com.airlinemanagement.model.User;

import java.util.HashSet;
import java.util.Set;

public class Repository<T extends User> {
    private Set<T> users = new HashSet<>();

    public synchronized void addUser(T user) {
        if (users.add(user)) {
            System.out.println("üéâ Successfully added: " + user);
        } else {
            System.out.println("User already exists!");
        }
    }

    public Set<T> getUsers() {
        return users;
    }

    public T findById(int id) {
        return users.stream()
                .filter(user -> user.getId() == id)
                .findFirst()
                .orElse(null);
    }

    public synchronized T deleteUser(int id) {
        T user = findById(id);
        if (user != null) {
            users.remove(user);
            System.out.println("‚úÖ User deleted: " + user.getFirstName() + " " + user.getLastName());
            return user; // –í—Ä—ä—â–∞–º–µ –∏–∑—Ç—Ä–∏—Ç–∏—è –æ–±–µ–∫—Ç, –∑–∞ –¥–∞ –≥–æ –∑–∞–ø–∞–∑–∏–º –∑–∞ `undo()`
        } else {
            System.out.println("‚ùå No such user with ID: " + id);
            return null;
        }
    }


    public void listAllUsers() {
        if (users.isEmpty()) {
            System.out.println("No users available!");
        } else {
            users.forEach(System.out::println);
        }
    }
}
/*
- users –≤–µ—á–µ –µ Set, –∫–æ–µ—Ç–æ –Ω–µ –ø–æ–∑–≤–æ–ª—è–≤–∞ –¥—É–±–ª–∏—Ä–∞–Ω–∏ –æ–±–µ–∫—Ç–∏.
- –î–æ–±–∞–≤–µ–Ω –µ findById() –∑–∞ –ª–µ—Å–Ω–æ —Ç—ä—Ä—Å–µ–Ω–µ.
- –ú–µ—Ç–æ–¥—ä—Ç deleteUser() –ø—Ä–µ–º–∞—Ö–≤–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –ø–æ ID*/